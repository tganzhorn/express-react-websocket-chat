{"ast":null,"code":"var _jsxFileName = \"/home/tobias/Documents/test-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport SocketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const socket = useRef(null);\n  const [userName, setUserName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [online, setOnline] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [transportType, setTransportType] = useState(\"none\");\n\n  const handleUserNameChange = event => {\n    setUserName(() => event.target.value);\n  };\n\n  const handleMessageChange = event => {\n    setMessage(() => event.target.value);\n  };\n\n  const handleMessages = msg => {\n    setMessages(messages => [...messages, msg]);\n  };\n\n  const handleConnect = () => {\n    setOnline(true);\n  };\n\n  const handleDisconnect = () => {\n    setOnline(false);\n  };\n\n  const handleTransportType = () => {\n    setTransportType(socket.current.io.engine.transport.query.transport);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMessage(\"\");\n    socket.current.emit('chat message', {\n      message,\n      userName,\n      timestamp: new Date()\n    });\n  };\n\n  useEffect(() => {\n    socket.current = SocketIOClient();\n    socket.current.on(\"connect\", handleConnect);\n    socket.current.on(\"disconnect\", () => handleDisconnect);\n    socket.current.on(\"chat message\", handleMessages);\n    socket.current.onAny(handleTransportType);\n    return () => {\n      socket.current.removeAllListeners();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          width: 16,\n          height: 16,\n          backgroundColor: online ? \"green\" : \"red\",\n          display: \"inline-block\",\n          borderRadius: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: transportType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName,\n        onChange: handleUserNameChange,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: handleMessageChange,\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), messages.map(msg => {\n      const {\n        userName,\n        message,\n        timestamp\n      } = msg;\n      const time = new Date(timestamp);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [time.getHours(), \":\", ('0' + time.getMinutes()).slice(-2), \" | \", userName, \": \", message]\n      }, timestamp + userName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(App, \"uBRtdoiEF04bTtZsh5gT6/Jfb+o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tobias/Documents/test-app/client/src/App.js"],"names":["React","useEffect","useRef","useState","SocketIOClient","App","socket","userName","setUserName","message","setMessage","online","setOnline","messages","setMessages","transportType","setTransportType","handleUserNameChange","event","target","value","handleMessageChange","handleMessages","msg","handleConnect","handleDisconnect","handleTransportType","current","io","engine","transport","query","handleSubmit","preventDefault","emit","timestamp","Date","on","onAny","removeAllListeners","display","alignItems","gap","width","height","backgroundColor","borderRadius","map","time","getHours","getMinutes","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport SocketIOClient from 'socket.io-client';\n\nconst App = () => {\n  const socket = useRef(null);\n  const [userName, setUserName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [online, setOnline] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [transportType, setTransportType] = useState(\"none\");\n\n  const handleUserNameChange = event => {\n    setUserName(() => event.target.value);\n  }\n\n  const handleMessageChange = event => {\n    setMessage(() => event.target.value);\n  }\n\n  const handleMessages = (msg) => {\n    setMessages(messages => [...messages, msg]);\n  }\n\n  const handleConnect = () => {\n    setOnline(true);\n  }\n\n  const handleDisconnect = () => {\n    setOnline(false);\n  }\n\n  const handleTransportType = () => {\n    setTransportType(socket.current.io.engine.transport.query.transport);\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMessage(\"\");\n    socket.current.emit('chat message', {message, userName, timestamp: new Date()});\n  }\n\n  useEffect(() => {\n    socket.current = SocketIOClient();\n\n    socket.current.on(\"connect\", handleConnect);\n\n    socket.current.on(\"disconnect\", () => handleDisconnect);\n\n    socket.current.on(\"chat message\", handleMessages);\n\n    socket.current.onAny(handleTransportType);\n\n    return () => {\n      socket.current.removeAllListeners();\n    }\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{display: \"flex\", alignItems: \"center\", gap: 8}}>\n        <span style={{\n          width: 16,\n          height: 16,\n          backgroundColor: online ? \"green\" : \"red\",\n          display: \"inline-block\",\n          borderRadius: \"50%\"\n        }} />\n        <span>{transportType}</span>\n        <input type=\"text\" value={userName} onChange={handleUserNameChange} placeholder=\"Username\" />\n        <input type=\"text\" value={message} onChange={handleMessageChange} placeholder=\"Message\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {\n        messages.map(msg => {\n          const {userName, message, timestamp} = msg;\n          const time = new Date(timestamp);\n\n          return (\n            <div key={timestamp + userName}>{time.getHours()}:{('0' + time.getMinutes()).slice(-2)} | {userName}: {message}</div>\n          )\n        })\n      }\n    </>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}