{"ast":null,"code":"var _jsxFileName = \"/home/tobias/Documents/test-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport SocketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = SocketIOClient();\n    socket.current.on(\"connect\", (...args) => console.log(\"Connected via\", socket.current.io.engine.transport.query.transport, \"!\"));\n    socket.current.on(\"disconnect\", () => console.log(\"disconnected!\"));\n    socket.current.on(\"message\", console.log);\n    return () => {\n      socket.current.removeAllListeners();\n    };\n  }, []);\n\n  const handleSocket = () => {\n    socket.current.emit('message', {\n      message: \"Hi there!\"\n    });\n  };\n\n  const handleRegular = () => {\n    fetch(\"/api/world\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: \"Hi There!!xD\"\n      })\n    }).then(res => res.json()).then(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSocket,\n      children: \"Send me a socket message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegular,\n      children: \"Send me a regular message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"tT+TUeqDasSnJe6iF3dKYibtzxk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tobias/Documents/test-app/client/src/App.js"],"names":["React","useEffect","useRef","SocketIOClient","App","socket","current","on","args","console","log","io","engine","transport","query","removeAllListeners","handleSocket","emit","message","handleRegular","fetch","method","headers","body","JSON","stringify","then","res","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,MAAM,GAAGH,MAAM,CAAC,IAAD,CAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACC,OAAP,GAAiBH,cAAc,EAA/B;AAEAE,IAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,SAAlB,EAA6B,CAAC,GAAGC,IAAJ,KAAaC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,MAAM,CAACC,OAAP,CAAeK,EAAf,CAAkBC,MAAlB,CAAyBC,SAAzB,CAAmCC,KAAnC,CAAyCD,SAAtE,EAAiF,GAAjF,CAA1C;AAEAR,IAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,YAAlB,EAAgC,MAAME,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAtC;AAEAL,IAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,SAAlB,EAA6BE,OAAO,CAACC,GAArC;AAEA,WAAO,MAAM;AACXL,MAAAA,MAAM,CAACC,OAAP,CAAeS,kBAAf;AACD,KAFD;AAGD,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMC,YAAY,GAAG,MAAM;AACzBX,IAAAA,MAAM,CAACC,OAAP,CAAeW,IAAf,CAAoB,SAApB,EAA+B;AAACC,MAAAA,OAAO,EAAE;AAAV,KAA/B;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,QAAAA,OAAO,EAAE;AAAV,OAAf;AALY,KAAf,CAAL,CAMGQ,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAM2BF,IAN3B,CAMgCjB,OAAO,CAACC,GANxC;AAOD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CArCD;;GAAMf,G;;KAAAA,G;AAuCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport SocketIOClient from 'socket.io-client';\n\nconst App = () => {\n  const socket = useRef(null);\n\n  useEffect(() => {\n    socket.current = SocketIOClient();\n\n    socket.current.on(\"connect\", (...args) => console.log(\"Connected via\", socket.current.io.engine.transport.query.transport, \"!\"));\n\n    socket.current.on(\"disconnect\", () => console.log(\"disconnected!\"));\n\n    socket.current.on(\"message\", console.log);\n\n    return () => {\n      socket.current.removeAllListeners();\n    }\n  }, []);\n\n  const handleSocket = () => {\n    socket.current.emit('message', {message: \"Hi there!\"})\n  }\n\n  const handleRegular = () => {\n    fetch(\"/api/world\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({message: \"Hi There!!xD\"})\n    }).then(res => res.json()).then(console.log);\n  }\n\n  return (\n    <>\n      <button onClick={handleSocket}>Send me a socket message!</button>\n      <button onClick={handleRegular}>Send me a regular message!</button>\n    </>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}