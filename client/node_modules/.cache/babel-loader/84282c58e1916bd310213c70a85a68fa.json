{"ast":null,"code":"var _classCallCheck = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Polling = require(\"./polling\");\n\nvar qs = require(\"querystring\");\n\nvar rDoubleSlashes = /\\\\\\\\n/g;\nvar rSlashes = /(\\\\)?\\\\n/g;\n\nvar JSONP = /*#__PURE__*/function (_Polling) {\n  \"use strict\";\n\n  _inherits(JSONP, _Polling);\n\n  var _super = _createSuper(JSONP);\n\n  /**\n   * JSON-P polling transport.\n   *\n   * @api public\n   */\n  function JSONP(req) {\n    var _this;\n\n    _classCallCheck(this, JSONP);\n\n    _this = _super.call(this, req);\n    _this.head = \"___eio[\" + (req._query.j || \"\").replace(/[^0-9]/g, \"\") + \"](\";\n    _this.foot = \");\";\n    return _this;\n  }\n  /**\n   * Handles incoming data.\n   * Due to a bug in \\n handling by browsers, we expect a escaped string.\n   *\n   * @api private\n   */\n\n\n  _createClass(JSONP, [{\n    key: \"onData\",\n    value: function onData(data) {\n      // we leverage the qs module so that we get built-in DoS protection\n      // and the fast alternative to decodeURIComponent\n      data = qs.parse(data).d;\n\n      if (\"string\" === typeof data) {\n        // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n        // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n        data = data.replace(rSlashes, function (match, slashes) {\n          return slashes ? match : \"\\n\";\n        });\n\n        _get(_getPrototypeOf(JSONP.prototype), \"onData\", this).call(this, data.replace(rDoubleSlashes, \"\\\\n\"));\n      }\n    }\n    /**\n     * Performs the write.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, options, callback) {\n      // we must output valid javascript, not valid json\n      // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n      var js = JSON.stringify(data).replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\"); // prepare response\n\n      data = this.head + js + this.foot;\n\n      _get(_getPrototypeOf(JSONP.prototype), \"doWrite\", this).call(this, data, options, callback);\n    }\n  }]);\n\n  return JSONP;\n}(Polling);\n\nmodule.exports = JSONP;","map":{"version":3,"sources":["/home/tobias/Documents/test-app/client/node_modules/engine.io/lib/transports/polling-jsonp.js"],"names":["Polling","require","qs","rDoubleSlashes","rSlashes","JSONP","req","head","_query","j","replace","foot","data","parse","d","match","slashes","options","callback","js","JSON","stringify","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAME,cAAc,GAAG,QAAvB;AACA,IAAMC,QAAQ,GAAG,WAAjB;;IAEMC,K;;;;;;;AACJ;AACF;AACA;AACA;AACA;AACE,iBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AACf,8BAAMA,GAAN;AAEA,UAAKC,IAAL,GAAY,YAAY,CAACD,GAAG,CAACE,MAAJ,CAAWC,CAAX,IAAgB,EAAjB,EAAqBC,OAArB,CAA6B,SAA7B,EAAwC,EAAxC,CAAZ,GAA0D,IAAtE;AACA,UAAKC,IAAL,GAAY,IAAZ;AAJe;AAKhB;AAED;AACF;AACA;AACA;AACA;AACA;;;;;WACE,gBAAOC,IAAP,EAAa;AACX;AACA;AACAA,MAAAA,IAAI,GAAGV,EAAE,CAACW,KAAH,CAASD,IAAT,EAAeE,CAAtB;;AACA,UAAI,aAAa,OAAOF,IAAxB,EAA8B;AAC5B;AACA;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACF,OAAL,CAAaN,QAAb,EAAuB,UAASW,KAAT,EAAgBC,OAAhB,EAAyB;AACrD,iBAAOA,OAAO,GAAGD,KAAH,GAAW,IAAzB;AACD,SAFM,CAAP;;AAGA,0EAAaH,IAAI,CAACF,OAAL,CAAaP,cAAb,EAA6B,KAA7B,CAAb;AACD;AACF;AAED;AACF;AACA;AACA;AACA;;;;WACE,iBAAQS,IAAR,EAAcK,OAAd,EAAuBC,QAAvB,EAAiC;AAC/B;AACA;AACA,UAAMC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAeT,IAAf,EACRF,OADQ,CACA,SADA,EACW,SADX,EAERA,OAFQ,CAEA,SAFA,EAEW,SAFX,CAAX,CAH+B,CAO/B;;AACAE,MAAAA,IAAI,GAAG,KAAKL,IAAL,GAAYY,EAAZ,GAAiB,KAAKR,IAA7B;;AAEA,yEAAcC,IAAd,EAAoBK,OAApB,EAA6BC,QAA7B;AACD;;;;EAjDiBlB,O;;AAoDpBsB,MAAM,CAACC,OAAP,GAAiBlB,KAAjB","sourcesContent":["const Polling = require(\"./polling\");\nconst qs = require(\"querystring\");\nconst rDoubleSlashes = /\\\\\\\\n/g;\nconst rSlashes = /(\\\\)?\\\\n/g;\n\nclass JSONP extends Polling {\n  /**\n   * JSON-P polling transport.\n   *\n   * @api public\n   */\n  constructor(req) {\n    super(req);\n\n    this.head = \"___eio[\" + (req._query.j || \"\").replace(/[^0-9]/g, \"\") + \"](\";\n    this.foot = \");\";\n  }\n\n  /**\n   * Handles incoming data.\n   * Due to a bug in \\n handling by browsers, we expect a escaped string.\n   *\n   * @api private\n   */\n  onData(data) {\n    // we leverage the qs module so that we get built-in DoS protection\n    // and the fast alternative to decodeURIComponent\n    data = qs.parse(data).d;\n    if (\"string\" === typeof data) {\n      // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n      // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n      data = data.replace(rSlashes, function(match, slashes) {\n        return slashes ? match : \"\\n\";\n      });\n      super.onData(data.replace(rDoubleSlashes, \"\\\\n\"));\n    }\n  }\n\n  /**\n   * Performs the write.\n   *\n   * @api private\n   */\n  doWrite(data, options, callback) {\n    // we must output valid javascript, not valid json\n    // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n    const js = JSON.stringify(data)\n      .replace(/\\u2028/g, \"\\\\u2028\")\n      .replace(/\\u2029/g, \"\\\\u2029\");\n\n    // prepare response\n    data = this.head + js + this.foot;\n\n    super.doWrite(data, options, callback);\n  }\n}\n\nmodule.exports = JSONP;\n"]},"metadata":{},"sourceType":"script"}