{"ast":null,"code":"var _classCallCheck = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/tobias/Documents/test-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar EventEmitter = require(\"events\");\n\nvar parser_v4 = require(\"engine.io-parser\");\n\nvar parser_v3 = require(\"./parser-v3/index\");\n\nvar debug = require(\"debug\")(\"engine:transport\");\n/**\n * Noop function.\n *\n * @api private\n */\n\n\nfunction noop() {}\n\nvar Transport = /*#__PURE__*/function (_EventEmitter) {\n  \"use strict\";\n\n  _inherits(Transport, _EventEmitter);\n\n  var _super = _createSuper(Transport);\n\n  /**\n   * Transport constructor.\n   *\n   * @param {http.IncomingMessage} request\n   * @api public\n   */\n  function Transport(req) {\n    var _this;\n\n    _classCallCheck(this, Transport);\n\n    _this = _super.call(this);\n    _this.readyState = \"open\";\n    _this.discarded = false;\n    _this.protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n\n    _this.parser = _this.protocol === 4 ? parser_v4 : parser_v3;\n    return _this;\n  }\n  /**\n   * Flags the transport as discarded.\n   *\n   * @api private\n   */\n\n\n  _createClass(Transport, [{\n    key: \"discard\",\n    value: function discard() {\n      this.discarded = true;\n    }\n    /**\n     * Called with an incoming HTTP request.\n     *\n     * @param {http.IncomingMessage} request\n     * @api private\n     */\n\n  }, {\n    key: \"onRequest\",\n    value: function onRequest(req) {\n      debug(\"setting request\");\n      this.req = req;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(fn) {\n      if (\"closed\" === this.readyState || \"closing\" === this.readyState) return;\n      this.readyState = \"closing\";\n      this.doClose(fn || noop);\n    }\n    /**\n     * Called with a transport error.\n     *\n     * @param {String} message error\n     * @param {Object} error description\n     * @api private\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(msg, desc) {\n      if (this.listeners(\"error\").length) {\n        var err = new Error(msg);\n        err.type = \"TransportError\";\n        err.description = desc;\n        this.emit(\"error\", err);\n      } else {\n        debug(\"ignored transport error %s (%s)\", msg, desc);\n      }\n    }\n    /**\n     * Called with parsed out a packets from the data stream.\n     *\n     * @param {Object} packet\n     * @api private\n     */\n\n  }, {\n    key: \"onPacket\",\n    value: function onPacket(packet) {\n      this.emit(\"packet\", packet);\n    }\n    /**\n     * Called with the encoded packet data.\n     *\n     * @param {String} data\n     * @api private\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      this.onPacket(this.parser.decodePacket(data));\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      this.readyState = \"closed\";\n      this.emit(\"close\");\n    }\n  }]);\n\n  return Transport;\n}(EventEmitter);\n\nmodule.exports = Transport;","map":{"version":3,"sources":["/home/tobias/Documents/test-app/client/node_modules/engine.io/lib/transport.js"],"names":["EventEmitter","require","parser_v4","parser_v3","debug","noop","Transport","req","readyState","discarded","protocol","_query","EIO","parser","fn","doClose","msg","desc","listeners","length","err","Error","type","description","emit","packet","data","onPacket","decodePacket","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAA5B;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,mBAAD,CAAzB;;AACA,IAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAAP,CAAiB,kBAAjB,CAAd;AAEA;AACA;AACA;AACA;AACA;;;AAEA,SAASI,IAAT,GAAgB,CAAE;;IAEZC,S;;;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACE,qBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AACf;AACA,UAAKC,UAAL,GAAkB,MAAlB;AACA,UAAKC,SAAL,GAAiB,KAAjB;AACA,UAAKC,QAAL,GAAgBH,GAAG,CAACI,MAAJ,CAAWC,GAAX,KAAmB,GAAnB,GAAyB,CAAzB,GAA6B,CAA7C,CAJe,CAIiC;;AAChD,UAAKC,MAAL,GAAc,MAAKH,QAAL,KAAkB,CAAlB,GAAsBR,SAAtB,GAAkCC,SAAhD;AALe;AAMhB;AAED;AACF;AACA;AACA;AACA;;;;;WACE,mBAAU;AACR,WAAKM,SAAL,GAAiB,IAAjB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,mBAAUF,GAAV,EAAe;AACbH,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACA,WAAKG,GAAL,GAAWA,GAAX;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,eAAMO,EAAN,EAAU;AACR,UAAI,aAAa,KAAKN,UAAlB,IAAgC,cAAc,KAAKA,UAAvD,EAAmE;AAEnE,WAAKA,UAAL,GAAkB,SAAlB;AACA,WAAKO,OAAL,CAAaD,EAAE,IAAIT,IAAnB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,iBAAQW,GAAR,EAAaC,IAAb,EAAmB;AACjB,UAAI,KAAKC,SAAL,CAAe,OAAf,EAAwBC,MAA5B,EAAoC;AAClC,YAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUL,GAAV,CAAZ;AACAI,QAAAA,GAAG,CAACE,IAAJ,GAAW,gBAAX;AACAF,QAAAA,GAAG,CAACG,WAAJ,GAAkBN,IAAlB;AACA,aAAKO,IAAL,CAAU,OAAV,EAAmBJ,GAAnB;AACD,OALD,MAKO;AACLhB,QAAAA,KAAK,CAAC,iCAAD,EAAoCY,GAApC,EAAyCC,IAAzC,CAAL;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,kBAASQ,MAAT,EAAiB;AACf,WAAKD,IAAL,CAAU,QAAV,EAAoBC,MAApB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,gBAAOC,IAAP,EAAa;AACX,WAAKC,QAAL,CAAc,KAAKd,MAAL,CAAYe,YAAZ,CAAyBF,IAAzB,CAAd;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,mBAAU;AACR,WAAKlB,UAAL,GAAkB,QAAlB;AACA,WAAKgB,IAAL,CAAU,OAAV;AACD;;;;EA7FqBxB,Y;;AAgGxB6B,MAAM,CAACC,OAAP,GAAiBxB,SAAjB","sourcesContent":["const EventEmitter = require(\"events\");\nconst parser_v4 = require(\"engine.io-parser\");\nconst parser_v3 = require(\"./parser-v3/index\");\nconst debug = require(\"debug\")(\"engine:transport\");\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop() {}\n\nclass Transport extends EventEmitter {\n  /**\n   * Transport constructor.\n   *\n   * @param {http.IncomingMessage} request\n   * @api public\n   */\n  constructor(req) {\n    super();\n    this.readyState = \"open\";\n    this.discarded = false;\n    this.protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n    this.parser = this.protocol === 4 ? parser_v4 : parser_v3;\n  }\n\n  /**\n   * Flags the transport as discarded.\n   *\n   * @api private\n   */\n  discard() {\n    this.discarded = true;\n  }\n\n  /**\n   * Called with an incoming HTTP request.\n   *\n   * @param {http.IncomingMessage} request\n   * @api private\n   */\n  onRequest(req) {\n    debug(\"setting request\");\n    this.req = req;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close(fn) {\n    if (\"closed\" === this.readyState || \"closing\" === this.readyState) return;\n\n    this.readyState = \"closing\";\n    this.doClose(fn || noop);\n  }\n\n  /**\n   * Called with a transport error.\n   *\n   * @param {String} message error\n   * @param {Object} error description\n   * @api private\n   */\n  onError(msg, desc) {\n    if (this.listeners(\"error\").length) {\n      const err = new Error(msg);\n      err.type = \"TransportError\";\n      err.description = desc;\n      this.emit(\"error\", err);\n    } else {\n      debug(\"ignored transport error %s (%s)\", msg, desc);\n    }\n  }\n\n  /**\n   * Called with parsed out a packets from the data stream.\n   *\n   * @param {Object} packet\n   * @api private\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called with the encoded packet data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    this.onPacket(this.parser.decodePacket(data));\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n"]},"metadata":{},"sourceType":"script"}